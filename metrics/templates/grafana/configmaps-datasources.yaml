{{- if or (and .Values.grafana.enabled .Values.grafana.sidecar.datasources.enabled) .Values.grafana.forceDeployDatasources }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "kube-prometheus-stack.fullname" . }}-grafana-datasource
  namespace: {{ template "kube-prometheus-stack-grafana.namespace" . }}
{{- if .Values.grafana.sidecar.datasources.annotations }}
  annotations:
{{ toYaml .Values.grafana.sidecar.datasources.annotations | indent 4 }}
{{- end }}
  labels:
    {{ $.Values.grafana.sidecar.datasources.label }}: {{ $.Values.grafana.sidecar.datasources.labelValue | quote }}
    app: {{ template "kube-prometheus-stack.name" $ }}-grafana
{{ include "kube-prometheus-stack.labels" $ | indent 4 }}
data:
  datasource.yaml: |-
    apiVersion: 1
{{- if .Values.grafana.deleteDatasources }}
    deleteDatasources:
{{ tpl (toYaml .Values.grafana.deleteDatasources | indent 6) . }}
{{- end }}
    datasources:
{{- $scrapeInterval := .Values.grafana.sidecar.datasources.defaultDatasourceScrapeInterval | default .Values.prometheus.prometheusSpec.scrapeInterval | default "30s" }}
{{- if .Values.grafana.sidecar.datasources.defaultDatasourceEnabled }}
    - name: Prometheus
      type: prometheus
      uid: {{ .Values.grafana.sidecar.datasources.uid }}
      {{- if .Values.grafana.sidecar.datasources.url }}
      url: {{ .Values.grafana.sidecar.datasources.url }}
      {{- else }}
      url: http://{{ template "kube-prometheus-stack.fullname" . }}-prometheus.{{ template "kube-prometheus-stack.namespace" . }}:{{ .Values.prometheus.service.port }}/{{ trimPrefix "/" .Values.prometheus.prometheusSpec.routePrefix }}
      {{- end }}
      access: proxy
      isDefault: true
      jsonData:
        timeInterval: {{ $scrapeInterval }}
{{- if .Values.grafana.sidecar.datasources.exemplarTraceIdDestinations }}
        exemplarTraceIdDestinations:
        - datasourceUid: {{ .Values.grafana.sidecar.datasources.exemplarTraceIdDestinations.datasourceUid }}
          name: {{ .Values.grafana.sidecar.datasources.exemplarTraceIdDestinations.traceIdLabelName }}
{{- end }}
{{- if .Values.grafana.sidecar.datasources.createPrometheusReplicasDatasources }}
{{- range until (int .Values.prometheus.prometheusSpec.replicas) }}
    - name: Prometheus-{{ . }}
      type: prometheus
      uid: {{ $.Values.grafana.sidecar.datasources.uid }}-replica-{{ . }}
      url: http://prometheus-{{ template "kube-prometheus-stack.prometheus.crname" $ }}-{{ . }}.prometheus-operated:9090/{{ trimPrefix "/" $.Values.prometheus.prometheusSpec.routePrefix }}
      access: proxy
      isDefault: false
      jsonData:
        timeInterval: {{ $scrapeInterval }}
{{- if $.Values.grafana.sidecar.datasources.exemplarTraceIdDestinations }}
        exemplarTraceIdDestinations:
        - datasourceUid: {{ .Values.grafana.sidecar.datasources.exemplarTraceIdDestinations.datasourceUid }}
          name: {{ .Values.grafana.sidecar.datasources.exemplarTraceIdDestinations.traceIdLabelName }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- if .Values.grafana.additionalDataSources }}
{{ tpl (toYaml .Values.grafana.additionalDataSources | indent 4) . }}
{{- end }}
{{- end }}
    - name: loki
      type: loki
      access: proxy
      url: http://loki.monitoring:3100
      editable: false
      jsonData:
        maxLines : 5000
        manageAlerts: true
        httpHeaderName1: "X-Scope-OrgID"
        derivedFields:
          - name: "trace_id"
            matcherRegex: '.trace_id": "(.+?)"\, "'
            url: "$${__value.raw}"
            datasourceUid: tempo
      secureJsonData:
        httpHeaderValue1: "fake"
    - name: tempo
      type: tempo
      access: proxy
      url: http://tempo.monitoring:3100
      editable: false
      jsonData:
        httpMethod: "GET"
        nodeGraph:
          enabled: true
        search:
          hide: false
        serviceMap:
          datasourceUid: "Prometheus"
        tracesToLogs:
          datasourceUid: "loki"